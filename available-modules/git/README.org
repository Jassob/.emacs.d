# -*- indent-tabs-mode: nil; -*-
#+TITLE: Git module
#+AUTHOR: Jassob
#+DATE: <2018-07-29>

* About this file
  This file contains the literate source of the Git module.

* Module
  I mostly use [[https://git-scm.com/][Git]] to handle my version control and while it
  certainly got somewhat of a steep learning curve and a few rough
  edges here and there I mostly find it intuitive.

  To help me manage my Git repositories I use the fantastic package
  =magit=, which is a Git frontend to Emacs and one of the few Git
  frontends I really like.

  #+begin_src emacs-lisp :tangle module.el
    (use-package magit :bind ("C-x g" . magit-status) :ensure t :defer t)
  #+end_src

  =Git-gutter+= is a package that shows a line's status (added,
  modifid or deleted) in a file that is version controlled by Git.

  #+begin_src emacs-lisp :tangle module.el
    (use-package git-gutter+ :ensure t :diminish t
      :hook common-code-mode-hook
      :bind (:map git-gutter+-mode-map
                  ;; Navigate on hunks
                  ("C-x n"   . git-gutter+-next-hunk)
                  ("C-x p"   . git-gutter+-previous-hunk)
                  ;; Act on hunks
                  ("C-x v =" . git-gutter+-show-hunk)
                  ("C-x r"   . git-gutter+-revert-hunks)
                  ("C-x t"   . git-gutter+-stage-hunks)
                  ("C-x c"   . git-gutter+-commit)
                  ("C-x C"   . git-gutter+-stage-and-commit)
                  ("C-x C-y" . git-gutter+-stage-and-commit-whole-buffer)
                  ("C-x U"   . git-gutter+-unstage-whole-buffer)))
  #+end_src

  To help me interact with my Github repositories I use =forge=.

  #+begin_src emacs-lisp :tangle module.el
    (use-package forge :after magit :ensure t)
  #+end_src
