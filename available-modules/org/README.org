# -*- indent-tabs-mode: nil; -*-
#+TITLE: Org module
#+AUTHOR: Jassob
#+DATE: <2018-07-28>

* About this file
  This file contains the literate source of the Org module.

* Module

  [[http://orgmode.org][Org mode]] is the mode I use to organize my studies, my projects and
  my life in general. Much of this configuration is taken from Sacha
  Chua's Org configuration.

  #+begin_src emacs-lisp :tangle module.el
    (use-package org :ensure t :commands org-agenda
      :mode (("\\.txt\\'" . org-mode)
             ("\\.org\\'" . org-mode))
      :bind
      (:map global-map
            ("C-c c"     . org-capture)
            ("C-c a"     . org-agenda)
            ("C-c l"     . org-store-link)
            ("C-c L"     . org-insert-link-global)
            ("C-c O"     . org-open-at-point-global)
            ("<f9> <f9>" . org-agenda-list)
            ("<f9> <f8>" . (lambda () (interactive) (org-capture nil "r"))))
      (:map org-mode-map
            ("C-M-w"    . append-next-kill)
            ("C-TAB"    . org-cycle)
            ("C-c v"    . org-show-todo-tree)
            ("C-c k"    . org-cut-subtree)
            ("C-c R"    . org-reveal)
            ("C-c o"    . local/org-follow-entry-link)
            ("C-c C-r"  . org-refile))
      :config
      (setq org-clock-persist t
            org-clock-into-drawer t
            org-log-into-drawer "LOGBOOK"
            org-log-note-clock-out t
            org-clock-report-include-clocking-task t

            org-enforce-todo-dependencies t
            org-track-ordered-properties-with-tag t

            org-agenda-dim-blocked-tasks t
            org-agenda-tags-column -100
            org-agenda-sticky t
            org-agenda-skip-scheduled-if-done t
            org-agenda-skip-deadline-if-done t
            org-agenda-skip-scheduled-if-deadline-is-shown 'not-today
            org-columns-default-format "14%DEADLINE %Effort{:} %CLOCKSUM %1PRIORITY %TODO %50ITEM %TAGS"

            org-show-notification-handler 'message
            org-export-backends '(org latex icalendar html ascii)

            org-refile-targets '((org-agenda-files :maxlevel . 6)))

      ;; Add org-ctags, org-protocol and org-eww modules
      (mapcar (lambda (mod) (add-to-list 'org-modules mod))
              '(org-ctags org-protocol org-eww))

      ;; Add speed-commands
      (mapcar (lambda (cmd) (add-to-list 'org-speed-commands-user cmd))
              '( '("y" org-todo-yesterday "DONE")
                 '("s" call-interactively 'org-schedule)
                 '("i" call-interactively 'org-clock-in)
                 '("o" call-interactively 'org-clock-out)
                 '("$" call-interactively 'org-archive-subtree)))
      (org-load-modules-maybe t)
      (org-clock-persistence-insinuate))
  #+end_src

   Sometimes it could be good to be able to create links between
   tasks, if they for instance depend on each other. These functions
   enable me link tasks and to quickly jump between linked tasks.

   #+begin_src emacs-lisp :tangle module.el
     (defun local/org-follow-entry-link ()
       "Follow the defined link for this entry."
       (interactive)
       (if (org-entry-get (point) "LINK")
           (org-open-link-from-string (org-entry-get (point) "LINK"))
         (org-open-at-point)))

     (defun local/org-link-projects (location)
       "Add link properties between the current subtree and the one specified by LOCATION."
       (interactive
        (list (let ((org-refile-use-cache nil))
          (org-refile-get-location "Location"))))
       (let ((link1 (org-store-link nil)) link2)
         (save-window-excursion
           (org-refile 4 nil location)
           (setq link2 (org-store-link nil))
           (org-set-property "LINK" link1))
         (org-set-property "LINK" link2)))
   #+end_src
